name: Code Quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  code-quality:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      packages: read # required to fetch internal or private CodeQL packs
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
          build-mode: none
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Install Python dependencies
      run: |
        pip install bandit pip-audit pylint numpy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Python security check (Bandit)
      uses: shundor/python-bandit-scan@ab1d87dfccc5a0ffab88be3aaac6ffe35c10d6cd
      with:
        exit_zero: true # exit with 0, even with results found
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information.
        path: src/  # comma-separated list of paths (files or directories)
        # level: Report only issues of a given severity level or higher. LOW, MEDIUM, HIGH or UNDEFINED (default)
        # confidence: Report only issues of a given confidence level or higher. LOW, MEDIUM, HIGH or UNDEFINED (default)
        excluded_paths: web/ # comma-separated list of paths (glob patterns supported)
        # skips: comma-separated list of test IDs to skip
        # ini_path: .bandit file that supplies command line arguments

    - name: lint code (pylint)
      run: pylint --rcfile=.pylintrc .

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    - name: Python dependency vulnerability check (pip-audit)
      run: |
        pip-audit --format=sarif --output=pip-audit-results.sarif --progress-spinner=off || true

    - name: Upload pip-audit SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: pip-audit-results.sarif
        category: pip-audit

#    - name: Python type checking
#      run: mypy .

#    - name: JavaScript/TypeScript linting
#      run: |
#        npm run lint || true
#        npm audit || true
