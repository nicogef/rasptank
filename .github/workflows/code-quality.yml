name: Code Quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  code-quality:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Install Python dependencies
      run: |
        pip install bandit mypy pip-audit pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Python security check (Bandit)
      uses: shundor/python-bandit-scan@ab1d87dfccc5a0ffab88be3aaac6ffe35c10d6cd
      with: # optional arguments
        # exit with 0, even with results found
        exit_zero: true # optional, default is DEFAULT
        # Github token of the repository (automatically created by Github)
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information.
        # File or directory to run bandit on
        # path: # optional, default is .
        # Report only issues of a given severity level or higher. Can be LOW, MEDIUM or HIGH. Default is UNDEFINED (everything)
        # level: # optional, default is UNDEFINED
        # Report only issues of a given confidence level or higher. Can be LOW, MEDIUM or HIGH. Default is UNDEFINED (everything)
        # confidence: # optional, default is UNDEFINED
        # comma-separated list of paths (glob patterns supported) to exclude from scan (note that these are in addition to the excluded paths provided in the config file) (default: .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg)
        # excluded_paths: # optional, default is DEFAULT
        # comma-separated list of test IDs to skip
        # skips: # optional, default is DEFAULT
        # path to a .bandit file that supplies command line arguments
        # ini_path: # optional, default is DEFAULT

    - name: lint code (pylint)
      run: pylint $(git ls-files '*.py')

    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit.json || true
        if [ -s pip-audit.json ]; then
          python pip_audit_json_to_sarif.py pip-audit.json pip-audit.sarif
          test -s pip-audit.sarif || { echo "pip-audit.sarif missing"; exit 1; }
        else
          echo "Skipping pip-audit SARIF (no pip-audit.json)."
        fi

    - name: Upload raw reports as artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          pip-audit.json
          pip-audit.sarif

    - name: Upload pip-audit SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: pip-audit.sarif

#    - name: Python type checking
#      run: mypy .

#    - name: JavaScript/TypeScript linting
#      run: |
#        npm run lint || true
#        npm audit || true
