name: Code Quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

#    - name: Set up Node.js
#      uses: actions/setup-node@v4
#      with:
#        node-version: 18
#        cache: 'npm'

    - name: Install Python dependencies
      run: |
        pip install bandit mypy pip-audit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#    - name: Install Node.js dependencies
#      run: npm ci
    - name: Run Bandit
      run: |
         bandit -r . -f json -o bandit.json || true
         if [ -s bandit.json ]; then
           python bandit_json_to_sarif.py bandit.json bandit.sarif
           test -s bandit.sarif || { echo "bandit.sarif missing"; exit 1; }
         else
           echo "Skipping Bandit SARIF (no bandit.json)."
         fi

    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit.json || true
        if [ -s pip-audit.json ]; then
          python pip_audit_json_to_sarif.py pip-audit.json pip-audit.sarif
          test -s pip-audit.sarif || { echo "pip-audit.sarif missing"; exit 1; }
        else
          echo "Skipping pip-audit SARIF (no pip-audit.json)."
        fi

    - name: List generated files
      run: ls -l *.json *.sarif || true

    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: |
          bandit.sarif
          pip-audit.sarif
      continue-on-error: true

    - name: Upload raw reports as artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit.json
          pip-audit.json
          bandit.sarif
          pip-audit.sarif

    - name: Python type checking
      run: mypy .

#    - name: JavaScript/TypeScript linting
#      run: |
#        npm run lint || true
#        npm audit || true
